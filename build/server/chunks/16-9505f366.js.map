{"version":3,"file":"16-9505f366.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/(app)/settings/_page.server.ts.js","../../../.svelte-kit/adapter-node/nodes/16.js"],"sourcesContent":["import { d as db } from \"../../../../chunks/database.js\";\nimport { f as fail, r as redirect } from \"../../../../chunks/index.js\";\nimport bcrypt from \"bcrypt\";\nconst load = async ({ request, locals }) => {\n  const userId = locals.user.id;\n  const user = await db.user.findUnique({\n    where: { id: userId }\n  });\n  return {\n    userId,\n    user\n  };\n};\nconst actions = {\n  changeName: async ({ request, params, locals }) => {\n    try {\n      const userId = locals.user.id;\n      const formData = Object.fromEntries(await request.formData());\n      const newName = formData.username.toString();\n      const updatedUser = await db.user.update({\n        data: { username: newName },\n        where: {\n          id: userId\n        }\n      });\n      if (updatedUser) {\n        console.log(\"User name updated successfully:\", updatedUser);\n      } else {\n        console.log(\"User not found or update failed.\");\n      }\n    } catch (err) {\n      console.log(\"Error\", err);\n    }\n  },\n  changePass: async ({ request, params, locals }) => {\n    try {\n      const userId = locals.user.id;\n      const formData = Object.fromEntries(await request.formData());\n      const oldPass = formData.oldPass.toString();\n      const newPass1 = formData.newPass1.toString();\n      const newPass2 = formData.newPass2.toString();\n      if (newPass1 != newPass2) {\n        return fail(400, { error: { message: \"Passwords do not match\" } });\n      }\n      const user = await db.user.findUnique({ where: { id: userId } });\n      if (!user) {\n        return fail(400, { error: { message: \"Could not find user.\" } });\n      }\n      const userPassword = await bcrypt.compare(oldPass, user.passwordHash);\n      if (!userPassword) {\n        return fail(400, { error: { message: \"Invalid credentials.\" } });\n        console.log(\"pass fail\");\n      }\n      const newPassHash = await bcrypt.hash(newPass1, 10);\n      const updatedPass = await db.user.update({\n        where: {\n          id: userId\n        },\n        data: {\n          passwordHash: newPassHash\n        }\n      });\n      if (updatedPass) {\n        console.log(\"Password updated successfully:\", updatedPass);\n      } else {\n        console.log(\"User not found or update failed.\");\n      }\n    } catch (err) {\n      console.log(\"Error\", err);\n    }\n  },\n  deleteAccount: async ({ request, params, locals }) => {\n    try {\n      const userId = locals.user.id;\n      await db.$transaction(async (prisma2) => {\n        await prisma2.message.deleteMany({\n          where: {\n            OR: [{ senderId: userId }, { receiverId: userId }]\n          }\n        });\n        const roomsToUpdate = await prisma2.room.findMany({\n          where: {\n            users: { some: { id: userId } }\n          }\n        });\n        for (const room of roomsToUpdate) {\n          const updatedUsers = room.users.filter((user) => user.id !== userId);\n          await prisma2.room.update({\n            where: { id: room.id },\n            data: {\n              users: {\n                disconnect: updatedUsers.map((user) => ({ id: user.id }))\n              }\n            }\n          });\n        }\n        await prisma2.friendRequest.deleteMany({\n          where: {\n            OR: [{ fromId: userId }, { toId: userId }]\n          }\n        });\n        await prisma2.friend.deleteMany({\n          where: {\n            OR: [{ userId1: userId }, { userId2: userId }]\n          }\n        });\n        await prisma2.notification.deleteMany({\n          where: {\n            receiverId: userId\n          }\n        });\n        await prisma2.user.delete({\n          where: {\n            id: userId\n          }\n        });\n      });\n    } catch (err) {\n      console.log(\"Error\", err);\n    }\n    throw redirect(302, \"/\");\n  }\n};\nexport {\n  actions,\n  load\n};\n","import * as server from '../entries/pages/(app)/settings/_page.server.ts.js';\n\nexport const index = 16;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/(app)/settings/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/(app)/settings/+page.server.ts\";\nexport const imports = [\"_app/immutable/nodes/16.158ccea1.js\",\"_app/immutable/chunks/index.229400e6.js\"];\nexport const stylesheets = [\"_app/immutable/assets/16.5073478e.css\"];\nexport const fonts = [];\n"],"names":[],"mappings":"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"}